package com.rubu.pop;

import android.app.Activity;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.graphics.drawable.ColorDrawable;
import android.net.Uri;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ListView;
import android.widget.PopupWindow;
import android.widget.Toast;

import com.rubu.R;
import com.rubu.adapter.SelectMapListAdpter;

import java.util.ArrayList;
import java.util.List;

public class SelectMapPopDialog {
    private Activity mContext;
    private PopupWindow mPopupWindow;
    private ListView optionLv;
    private SelectMapListAdpter selectMapListAdpter;
    private List<String> mapOptionList;
    private FrameLayout fm;
    private Button cancelBtn;

    public void setOnDialogListener(OnDialogListener onDialogListener) {
        mOnDialogListener = onDialogListener;
    }

    private OnDialogListener mOnDialogListener;

    public void setData(final String address) {
        getMapOption();
        Log.i("==========", "setData: "+mapOptionList.size());
        if (mapOptionList != null && mapOptionList.size() > 0) {
            selectMapListAdpter = new SelectMapListAdpter(mContext, mapOptionList);
            optionLv.setAdapter(selectMapListAdpter);
            optionLv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                @Override
                public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                    switch (mapOptionList.get(i)){
                        case "百度地图":
                            Intent baiduintent = new Intent();
                            baiduintent.setData(Uri.parse("baidumap://map/direction?region=beijing&origin=39.98871,116.43234&destination=" + address + "&mode=driving"));
                            dismiss();
                            mContext.startActivity(baiduintent); // 启动调用
                            break;
                        case "高德地图":
                            Intent gaodeintent = new Intent();
                            gaodeintent.setAction(Intent.ACTION_VIEW);
                            gaodeintent.addCategory(Intent.CATEGORY_DEFAULT);
                            //将功能Scheme以URI的方式传入data
                            Uri uri = Uri.parse("androidamap://keywordNavi?sourceApplication=softname&keyword=" + address + "&style=2");
                            gaodeintent.setData(uri);
                            //启动该页面即可
                            dismiss();
                            mContext.startActivity(gaodeintent);
                            break;
                    }
                }
            });
        } else {
            Toast.makeText(mContext,"请安装高德地图或者百度地图",Toast.LENGTH_SHORT).show();
        }
    }

    public SelectMapPopDialog(Activity context, FrameLayout fm) {
        this.mContext = context;
        this.fm = fm;
        init();
    }


    protected void init() {
        View rootView = LayoutInflater.from(mContext).inflate(R.layout.select_map_pop_dialog, null);
        optionLv = (ListView) rootView.findViewById(R.id.map_listview);
        cancelBtn = (Button)rootView.findViewById(R.id.cancel_btn) ;
        cancelBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                dismiss();
            }
        });
        mPopupWindow = new PopupWindow(rootView, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
        mPopupWindow.setAnimationStyle(R.style.popwin_anim_style);
        mPopupWindow.setFocusable(true);
        ColorDrawable dw = new ColorDrawable(0x00000000);
        mPopupWindow.setBackgroundDrawable(dw);
        mPopupWindow.setOnDismissListener(new PopupWindow.OnDismissListener() {
            @Override
            public void onDismiss() {
                fm.setAlpha(0f);
//                backgroundAlpha(mContext,1f);
            }
        });
    }
    /**
     * 设置添加屏幕的背景透明度
     * @param bgAlpha
     */
    public void backgroundAlpha(Activity context, float bgAlpha)
    {
        WindowManager.LayoutParams lp = context.getWindow().getAttributes();
        lp.alpha = bgAlpha;
        context.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);
        context.getWindow().setAttributes(lp);
    }

    /**
     * 获得本机装的地图app
     */
    private List<String> getMapOption() {
        mapOptionList = new ArrayList<>();
        if (checkPackage("com.baidu.BaiduMap")) {
            mapOptionList.add("百度地图");
        }
        if (checkPackage("com.autonavi.minimap")) {
            mapOptionList.add("高德地图");
        }
        return mapOptionList;
    }

    /**
     * 显示popupwindow
     *
     * @param view
     */
    public void show(View view) {
//        backgroundAlpha(mContext,0.5f);
        fm.setAlpha(0.5f);
        if (mPopupWindow.isShowing()) {
            mPopupWindow.dismiss();
        } else {
            mPopupWindow.showAtLocation(view, Gravity.BOTTOM, 0, 0);
        }
    }

    /**
     * 关闭popupwindow
     */
    public void dismiss() {
        if (mPopupWindow.isShowing()) mPopupWindow.dismiss();
    }


    public interface OnDialogListener {
        void onIsConfirm(boolean is);
    }

    /**
     * 检测该包名所对应的应用是否存在
     *
     * @param packageName
     * @return
     */

    public boolean checkPackage(String packageName)

    {

        if (packageName == null || "".equals(packageName))

            return false;

        try

        {

            mContext.getPackageManager().getApplicationInfo(packageName, PackageManager.GET_UNINSTALLED_PACKAGES);

            return true;

        } catch (PackageManager.NameNotFoundException e)

        {

            return false;

        }

    }
}
