package com.rubu.ui.act.register.adapter;

import android.content.Context;
import android.content.Intent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.rubu.R;
import com.rubu.base.BaseListAdapter;
import com.rubu.model.ServiceModel;
import com.rubu.ui.act.register.RegisterServiceChildAbilityAct;
import com.rubu.util.StringUtil;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

/**
 * Email 727320580@qq.com
 * Created by xika on 2017/9/28
 * Vwesion 1.0
 * Dsscription: 注册服务能力的适配器
 */

public class RegisterServiceAbilityAdapter extends BaseListAdapter<ServiceModel> {

    private OnCheckListenner mListenner;

    private List<ServiceModel> mCheckList;

    public RegisterServiceAbilityAdapter(Context context, List<ServiceModel> list) {
        super(context, list);
        mCheckList = new ArrayList<>();
    }

    @Override
    public View initView(final ServiceModel model, View convertView, ViewGroup parent) {
        final ViewHolder viewHolder;
        if (convertView == null) {
            convertView = LayoutInflater.from(context).inflate(R.layout.item_register_service_ability, null);
            viewHolder = new ViewHolder();
            viewHolder.mRoot = (LinearLayout) convertView.findViewById(R.id.root);
            viewHolder.mCBox = (CheckBox) convertView.findViewById(R.id.check_box);
            viewHolder.mAbilityName = (TextView) convertView.findViewById(R.id.tv_service_name);
            convertView.setTag(viewHolder);
        } else {
            viewHolder = (ViewHolder) convertView.getTag();
        }
        // 显示名字
        if (!StringUtil.isEmpty(model.getService_ability_parent_name())) {
            viewHolder.mAbilityName.setText(model.getService_ability_parent_name());
        }
        // checkBox的点击事件
        final View finalConvertView = convertView;
        if (model.isCheck()) {
            viewHolder.mCBox.setChecked(true);
            viewHolder.mAbilityName.setTextColor(finalConvertView.getResources().getColor(R.color.colorPrimary));
            mCheckList.add(model);
        } else {
            viewHolder.mCBox.setChecked(false);
            viewHolder.mAbilityName.setTextColor(finalConvertView.getResources().getColor(R.color.black));
        }
        viewHolder.mCBox.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (viewHolder.mCBox.isChecked()) {
                    viewHolder.mAbilityName.setTextColor(finalConvertView.getResources().getColor(R.color.colorPrimary));
                    model.setCheck(true);
                    mCheckList.add(model);
                    if (mListenner != null) {
                        mListenner.onClick(mCheckList);
                    }
                } else {
                    viewHolder.mAbilityName.setTextColor(finalConvertView.getResources().getColor(R.color.black));
                    model.setCheck(false);
                    mCheckList.remove(model);
                    if (mListenner != null) {
                        mListenner.onClick(mCheckList);
                    }
                }
            }
        });
        // item的点击事件
        viewHolder.mRoot.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(context, RegisterServiceChildAbilityAct.class);
                intent.putExtra("serviceChildAbilitys", (Serializable) model.getChildModel());
                intent.putExtra("serviceParentName", model.getService_ability_parent_name());
                context.startActivity(intent);
            }
        });
        return convertView;
    }

    /**
     * 选择
     */
    private class ViewHolder {
        LinearLayout mRoot;
        CheckBox mCBox;
        TextView mAbilityName;
    }

    public void setOnCheckListenner(OnCheckListenner listenner) {
        this.mListenner = listenner;
    }

    public interface OnCheckListenner {
        void onClick(List<ServiceModel> mList);
    }
}
