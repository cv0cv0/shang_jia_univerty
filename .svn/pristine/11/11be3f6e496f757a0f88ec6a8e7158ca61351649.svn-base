package com.rubu.ui.act.mine;

import android.content.Intent;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.rubu.R;
import com.rubu.base.BaseActivity;
import com.rubu.constant.Constant;
import com.rubu.model.Base;
import com.rubu.net.ApiImp;
import com.rubu.net.Params;
import com.rubu.net.ReqJson;
import com.rubu.ui.act.login.model.UserInfoModel;
import com.rubu.util.LoginUtil;
import com.rubu.util.StringUtil;
import com.rubu.util.UserInfoUtil;

import butterknife.BindView;
import butterknife.OnClick;
import rx.Observer;
import rx.android.schedulers.AndroidSchedulers;
import rx.schedulers.Schedulers;

/**
 * Email 727320580@qq.com
 * Created by xika on 2017/10/13
 * Vwesion 1.0
 * Dsscription:
 */

public class MineModifyAdressAct extends BaseActivity {
    @BindView(R.id.title_left)
    TextView mTitleLeft;
    @BindView(R.id.title)
    TextView mTitle;
    @BindView(R.id.tv_old_adress)
    TextView mTVAdress;
    @BindView(R.id.is_Check)
    ImageView mIVCheck;
    @BindView(R.id.edit_adress)
    EditText mETAdress;
    @BindView(R.id.btn_next)
    Button mBTNNext;

    private String mShengShiQu, mStreet, mAdress;

    @Override
    protected int getViewId() {
        return R.layout.activity_mine_modify_adress;
    }

    @Override
    protected void initEvent() {
        mShengShiQu = getIntent().getStringExtra("shengshiqu");
        mStreet = getIntent().getStringExtra("street");
        mTitle.setText("修改地址");
        mTitleLeft.setText(R.string.back);
        mTitleLeft.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                onBackPressed();
            }
        });
        UserInfoModel model = UserInfoUtil.getInfo(mContext);
        mTVAdress.setText(model.getS_address());
        mETAdress.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                checkAdress(s.toString());
            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });
    }

    @OnClick({R.id.btn_next})
    public void onClick(View view) {
        switch (view.getId()) {
            // 省市区街道
            case R.id.btn_next:
                mAdress = mETAdress.getText().toString();
                modifyAddress();
                break;
        }
    }

    /**
     * 判断地址
     */
    private void checkAdress(String adress) {
        if (!StringUtil.isEmpty(adress)) {
            // 下一步
            mBTNNext.setEnabled(true);
            mBTNNext.setBackgroundResource(R.drawable.bg_login_btn_shape);
            mIVCheck.setVisibility(View.VISIBLE);
        } else {
            mBTNNext.setEnabled(false);
            mBTNNext.setBackgroundResource(R.drawable.bg_login_btn_shape_gray);
            mIVCheck.setVisibility(View.GONE);
        }
    }

    /**
     * 修改地址信息
     */
    private void modifyAddress() {
        showProgressDialog("请稍等...");
        ReqJson reqJson = new ReqJson();
        reqJson.setUser_id(LoginUtil.getUserId(mContext));
        reqJson.setProc(Constant.PROC_MODIFY_MINE_ADDRESS);
        reqJson.setS_worker_id(LoginUtil.getUserId(mContext));
        reqJson.setS_region_tag(mShengShiQu);
        reqJson.setStreet_name(mStreet);
        reqJson.setS_address(mAdress);
        reqJson.setHas_rows("no");
        mSubscription = ApiImp.get().modifyAddress(Params.getNetWorkParams(reqJson))
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Observer<Base>() {
                    @Override
                    public void onCompleted() {

                    }

                    @Override
                    public void onError(Throwable e) {
                        dissmisProgressDialog();
                        Toast.makeText(mContext, "网络不给力", Toast.LENGTH_LONG).show();
                        Log.i("修改地址错误信息", e.toString());
                    }

                    @Override
                    public void onNext(Base model) {
                        dissmisProgressDialog();
                        if (model.getResult().getOut_Flag() == 0) {
                            Intent intent = new Intent();
                            intent.putExtra("shengshiqu", mShengShiQu);
                            intent.putExtra("street", mStreet);
                            intent.putExtra("address", mAdress);
                            showToast("修改成功");
                            setResult(RESULT_OK, intent);
                            finish();
                        } else {
                            showToast(model.getResult().getOut_nszRtn());
                        }
                    }
                });
    }

    @Override
    public void onBackPressed() {
        super.onBackPressed();
        finish();
    }
}
